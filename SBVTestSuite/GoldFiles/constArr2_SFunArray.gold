** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () Int 1)
[GOOD] (define-fun s5 () Int 2)
[GOOD] (define-fun s7 () Int 3)
[GOOD] (define-fun s9 () Int 75)
[GOOD] (define-fun s14 () Int 12)
[GOOD] (define-fun s15 () Int 5)
[GOOD] (define-fun s16 () Int 6)
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () Int) ; tracks user variable "i"
[GOOD] (declare-fun s1 () Int) ; tracks user variable "j"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- formula ---
[GOOD] (define-fun s2 () Bool (distinct s0 s1))
[GOOD] (define-fun s4 () Bool (= s0 s3))
[GOOD] (define-fun s6 () Bool (= s0 s5))
[GOOD] (define-fun s8 () Bool (= s0 s7))
[GOOD] (define-fun s10 () Bool (= s0 s9))
[GOOD] (define-fun s11 () Bool (or s8 s10))
[GOOD] (define-fun s12 () Bool (or s6 s11))
[GOOD] (define-fun s13 () Bool (or s4 s12))
[GOOD] (define-fun s17 () Int (ite s10 s15 s5))
[GOOD] (define-fun s18 () Int (ite s8 s16 s17))
[GOOD] (define-fun s19 () Int (ite s6 s15 s18))
[GOOD] (define-fun s20 () Int (ite s4 s14 s19))
[GOOD] (define-fun s21 () Bool (= s0 s1))
[GOOD] (define-fun s22 () Bool (= s1 s3))
[GOOD] (define-fun s23 () Bool (= s1 s5))
[GOOD] (define-fun s24 () Bool (= s1 s7))
[GOOD] (define-fun s25 () Bool (= s1 s9))
[GOOD] (define-fun s26 () Int (ite s25 s15 s5))
[GOOD] (define-fun s27 () Int (ite s24 s16 s26))
[GOOD] (define-fun s28 () Int (ite s23 s15 s27))
[GOOD] (define-fun s29 () Int (ite s22 s14 s28))
[GOOD] (define-fun s30 () Int (ite s21 s20 s29))
[GOOD] (define-fun s31 () Bool (= s20 s30))
[GOOD] (assert s2)
[GOOD] (assert s13)
[GOOD] (assert s31)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s1))
[RECV] ((s1 75))
[SEND] (get-value (s0))
[RECV] ((s0 2))
*** Solver   : Z3
*** Exit code: ExitSuccess

FINAL OUTPUT:
Satisfiable
